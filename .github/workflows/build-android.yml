name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup CI environment
      run: |
        chmod +x ./scripts/setup-ci.sh
        ./scripts/setup-ci.sh
        
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Setup Expo CLI
      run: bun add -g @expo/cli@latest
      
    - name: Prebuild Android
      run: bunx expo prebuild --platform android --clean
      
    - name: Build Android APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew assembleRelease
        
    - name: Rename APK
      run: |
        if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
          cp android/app/build/outputs/apk/release/app-release.apk ./heinicus-mobile-mechanic-v${{ github.run_number }}.apk
          echo "APK_PATH=./heinicus-mobile-mechanic-v${{ github.run_number }}.apk" >> $GITHUB_ENV
        else
          echo "APK file not found!"
          exit 1
        fi
        
    - name: Get APK info
      run: |
        if [ -f "${{ env.APK_PATH }}" ]; then
          APK_SIZE=$(du -h "${{ env.APK_PATH }}" | cut -f1)
          echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV
          echo "âœ… APK built successfully!"
          echo "ðŸ“¦ APK size: $APK_SIZE"
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: heinicus-mobile-mechanic-apk
        path: ${{ env.APK_PATH }}
        retention-days: 30
        compression-level: 6
        
    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          android/app/build/outputs/logs/
          android/build/outputs/logs/
        retention-days: 7
        if-no-files-found: ignore
        
    - name: Comment PR with APK info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const apkPath = process.env.APK_PATH;
          const apkSize = process.env.APK_SIZE;
          
          if (fs.existsSync(apkPath)) {
            const comment = `## ðŸ“± Android APK Built Successfully
            
            **APK Size:** ${apkSize}
            **Build Number:** ${{ github.run_number }}
            **Commit:** ${{ github.sha }}
            
            The APK has been uploaded as an artifact and can be downloaded from the Actions tab.
            
            ### Installation Instructions:
            1. Download the APK from the artifacts
            2. Enable "Install from unknown sources" on your Android device
            3. Install the APK: \`adb install heinicus-mobile-mechanic-v${{ github.run_number }}.apk\`
            
            **Target:** Android 11+ (API 30+)
            **Architecture:** Universal APK`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }